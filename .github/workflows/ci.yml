name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-mysql-client

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to start..."
        sleep 10
        until mysqladmin ping -h "127.0.0.1" --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done
    - name: Debug Environment Variables
      run: |
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}"
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}"
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}"
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}"

    - name: Run migrations
      env:
        GITHUB_ACTIONS: true
        MYSQL_HOST: 127.0.0.1
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      run: |
        python manage.py migrate --noinput

    - name: Run tests
      env:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      run: |
        pytest --disable-warnings --maxfail=5

